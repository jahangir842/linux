The `apt` (Advanced Package Tool) command in Ubuntu and other Debian-based distributions is a powerful package management tool. It simplifies the process of managing software packages and provides an easy-to-use command-line interface. Hereâ€™s a comprehensive list of `apt` commands along with explanations and examples:

### Basic Commands
********************************************************************************
1. **Update the package list:**
********************************************************************************
      
   sudo apt update
        
   This command updates the package index, ensuring you have the latest information about available packages.
********************************************************************************
2. **Upgrade all installed packages:**
********************************************************************************
      
   sudo apt upgrade
        
   This command upgrades all installed packages to their latest available versions.
********************************************************************************
3. **Upgrade all installed packages, with the ability to remove or install new dependencies:**
********************************************************************************
   
   sudo apt full-upgrade
        
   This command is similar to `upgrade`, but it can also handle changing dependencies.
********************************************************************************
4. **Install a new package:**
********************************************************************************   
   sudo apt install <package_name>
        
   Example:
      
   sudo apt install curl
        
********************************************************************************
5. **Remove an installed package:**
********************************************************************************      
   sudo apt remove <package_name>
        
   Example:
      
   sudo apt remove curl
        
********************************************************************************
6. **Completely remove a package (including configuration files):**
********************************************************************************     
   sudo apt purge <package_name>
        
   Example:
      
   sudo apt purge curl
   
********************************************************************************
7. **Search for a package:**
********************************************************************************      
   apt search <package_name>
   
   Example:
      
   apt search nginx
 
********************************************************************************
8. **Show package information:**
********************************************************************************      
   apt show <package_name>
  
   Example:
      
   apt show nginx
        
used to display detailed information about a specific package. This information includes details such as the package version, its dependencies, the maintainer, the description, and more.

********************************************************************************
9. **Cleaning and Removing Packages:**
********************************************************************************      
	sudo apt clean

It deletes the .deb package files from the /var/cache/apt/archives directory and 
the partial packages from /var/cache/apt/archives/partial.   

	sudo apt autoremove
        
   This command removes packages that were automatically installed to satisfy dependencies for other packages and are now no longer needed.
   
	sudo apt autoclean

This command will clean up the local repository of package files that are no longer available for download, which might also free up some space.        
********************************************************************************
12. **Check for broken dependencies:**
********************************************************************************       
    sudo apt check
         

### Specific Use Cases
********************************************************************************
13. **Install a specific version of a package:**
********************************************************************************       
    sudo apt install <package_name>=<version>
         
    Example:
       
    sudo apt install nginx=1.18.0-0ubuntu1
         
********************************************************************************
14. **Hold a package at its current version:**
********************************************************************************       
    sudo apt-mark hold <package_name>
         
    Example:
       
    sudo apt-mark hold nginx
         
********************************************************************************
15. **Unhold a package:**
********************************************************************************       
    sudo apt-mark unhold <package_name>
         
    Example:
       
    sudo apt-mark unhold nginx
         
********************************************************************************
16. **List all upgradable packages:**
********************************************************************************       
    apt list --upgradable
         

17. **List installed packages:**
       
    apt list --installed
         

18. **List available packages:**
       
    apt list
         
********************************************************************************
19. **Simulate an installation (show what would happen without making changes):**
********************************************************************************       
    sudo apt install --simulate <package_name>
         
    Example:
       
    sudo apt install --simulate nginx
         


         
******************************************************************************** 
24. **Show package details:**
********************************************************************************        
    apt-cache show <package_name>
         
    Example:
       
    apt-cache show nginx
         
******************************************************************************** 
25. **apt vs apt-cache:**
********************************************************************************          
apt is a comprehensive package management tool that handles package installation, removal, upgrades, etc., while apt-cache is primarily used for querying package cache information.

******************************************************************************** 
25. **apt search vs apt-cache search:**
********************************************************************************  
apt search: Use when you want a quick overview of available packages related to a keyword without needing detailed version or architecture information.
apt-cache search: Use when you need more detailed information about packages, such as versions and architectures, or when you want to filter based strictly on package names and descriptions.
